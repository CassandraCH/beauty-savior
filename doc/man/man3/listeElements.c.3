.TH "src/listeElements.c" 3 "Lundi 4 Mai 2020" "Version 0.2" "Beauty Savior" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/listeElements.c \- Programme qui permet de gérer les listes\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'baseGame\&.h'\fP
.br

.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBLinkedList\fP * \fBgetEnnemis\fP ()"
.br
.RI "Fonction qui permet d'acceder à la liste des ennemis\&. "
.ti -1c
.RI "\fBLinkedList\fP * \fBgetCollider\fP ()"
.br
.RI "Fonction qui permet d'acceder à la liste des colliders\&. "
.ti -1c
.RI "\fBLinkedList\fP * \fBgetBullets\fP ()"
.br
.RI "Fonction qui permet d'acceder à la liste des bullets\&. "
.ti -1c
.RI "\fBLinkedList\fP * \fBgetItems\fP ()"
.br
.RI "Fonction qui permet d'acceder à la liste des items\&. "
.ti -1c
.RI "int \fBgetTimerBullet\fP ()"
.br
.RI "Fonction qui permet d'acceder à la durée de vie/temps d'apparition à l'écran des bullets\&. "
.ti -1c
.RI "void \fBsetTimerBullet\fP (int time)"
.br
.RI "Fonction qui permet configuer le timer des bullets\&. "
.ti -1c
.RI "void \fBinit_List\fP (\fBLinkedList\fP *\fBlist\fP)"
.br
.RI "Fonction qui permet d'initialiser la liste passée en paramètre\&. "
.ti -1c
.RI "\fBNode\fP * \fBcreerElement\fP (SDL_Rect *rect, \fBtypeEntite\fP item_t, \fBbool\fP actif)"
.br
.RI "Fonction qui permet de créer un rectangle (portion de l'ecran) "
.ti -1c
.RI "void \fBinsertion\fP (\fBLinkedList\fP *\fBlist\fP, SDL_Rect *rect, \fBtypeEntite\fP items_t, \fBbool\fP actif)"
.br
.RI "Fonction qui permet d'insérer un élément dans une liste passée en paramètre\&. "
.ti -1c
.RI "void \fBsuppListe\fP (\fBLinkedList\fP *lst)"
.br
.RI "Fonction qui permet de supprimer la liste passée en paramètre\&. "
.ti -1c
.RI "\fBbool\fP \fBsuppPremier\fP (\fBLinkedList\fP *lst)"
.br
.RI "Fonction qui permet de supprimer la tete de la liste passée en paramètre\&. "
.ti -1c
.RI "\fBbool\fP \fBsuppDernier\fP (\fBLinkedList\fP *lst)"
.br
.RI "Fonction qui permet de supprimer la queue de la liste liste passée en paramètre\&. "
.ti -1c
.RI "\fBNode\fP * \fBtrouve\fP (\fBLinkedList\fP *lsptr, int target, \fBNode\fP **prvPtr)"
.br
.RI "Fonction qui permet de chercher un élement dans une liste\&. "
.ti -1c
.RI "\fBbool\fP \fBsupprimeCible\fP (\fBLinkedList\fP *lsptr, int target)"
.br
.RI "Fonction qui permet de supprimer un élément cible dans une liste\&. "
.ti -1c
.RI "void \fBAfficher_ElementsListes\fP (\fBLinkedList\fP *lst, SDL_Texture *tex, \fBtypeEntite\fP typeE, int largeurTex, int hauteurTex)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBLinkedList\fP \fBlistEnnemis\fP"
.br
.ti -1c
.RI "\fBLinkedList\fP \fBbullet\fP"
.br
.ti -1c
.RI "\fBLinkedList\fP \fBlistCollider\fP"
.br
.ti -1c
.RI "\fBLinkedList\fP \fBitems\fP"
.br
.ti -1c
.RI "int \fBtimerBullets\fP"
.br
.in -1c
.SH "Description détaillée"
.PP 
Programme qui permet de gérer les listes\&. 


.PP
\fBAuteur\fP
.RS 4
CALVADOS Cindy, CHAUMULON Cassandra, CHELLI Célia, OUSMANOVA Karina 
.RE
.PP
\fBVersion\fP
.RS 4
1\&.0 
.RE
.PP
\fBDate\fP
.RS 4
janvier 2020
.RE
.PP
Création d'une liste, ajout de nouvel élément, suppression de la tête, suppresion de la queue, accès à une liste, affichage d'une liste' 
.SH "Documentation des fonctions"
.PP 
.SS "void Afficher_ElementsListes (\fBLinkedList\fP * lst, SDL_Texture * tex, \fBtypeEntite\fP typeE, int largeurTex, int hauteurTex)"
affiche les elements de la liste 
.SS "\fBNode\fP * creerElement (SDL_Rect * rect, \fBtypeEntite\fP item_t, \fBbool\fP actif)"

.PP
Fonction qui permet de créer un rectangle (portion de l'ecran) Ce rectangle sera utilisé pour la texture 
.PP
\fBParamètres\fP
.RS 4
\fIrect\fP rectangle SDL 
.br
\fIitem_t\fP type de l'entité 
.br
\fIactif\fP etat de l'entité 
.RE
.PP
\fBRenvoie\fP
.RS 4
Pointeur sur une structure de type \fBNode\fP 
.RE
.PP

.SS "\fBLinkedList\fP * getBullets ()"

.PP
Fonction qui permet d'acceder à la liste des bullets\&. 
.PP
\fBRenvoie\fP
.RS 4
un pointeur sur une liste de type LinkedList 
.RE
.PP

.SS "\fBLinkedList\fP * getCollider ()"

.PP
Fonction qui permet d'acceder à la liste des colliders\&. 
.PP
\fBRenvoie\fP
.RS 4
un pointeur sur une liste de type LinkedList 
.RE
.PP

.SS "\fBLinkedList\fP * getEnnemis ()"

.PP
Fonction qui permet d'acceder à la liste des ennemis\&. 
.PP
\fBRenvoie\fP
.RS 4
un pointeur sur une liste de type LinkedList 
.RE
.PP

.SS "\fBLinkedList\fP * getItems ()"

.PP
Fonction qui permet d'acceder à la liste des items\&. 
.PP
\fBRenvoie\fP
.RS 4
un pointeur sur une liste de type LinkedList 
.RE
.PP

.SS "int getTimerBullet ()"

.PP
Fonction qui permet d'acceder à la durée de vie/temps d'apparition à l'écran des bullets\&. 
.PP
\fBRenvoie\fP
.RS 4
un pointeur sur une liste de type LinkedList 
.RE
.PP

.SS "void init_List (\fBLinkedList\fP * list)"

.PP
Fonction qui permet d'initialiser la liste passée en paramètre\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlist\fP liste a initialiser 
.RE
.PP
\fBRenvoie\fP
.RS 4
pas de valeur de retour (void) 
.RE
.PP

.SS "void insertion (\fBLinkedList\fP * list, SDL_Rect * rect, \fBtypeEntite\fP items_t, \fBbool\fP actif)"

.PP
Fonction qui permet d'insérer un élément dans une liste passée en paramètre\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlist\fP pointeur sur la liste dans laquelle on veut insérer un élement 
.br
\fIrect\fP pointeur sur l'élement a ajouter 
.br
\fIitems_t\fP type de l'élement à ajouter : ennemi, bullet, collider\&.\&.\&. 
.br
\fIactif\fP état de l'élement 
.RE
.PP
\fBRenvoie\fP
.RS 4
pas de valeur de retour (void) 
.RE
.PP

.SS "void setTimerBullet (int time)"

.PP
Fonction qui permet configuer le timer des bullets\&. 
.PP
\fBParamètres\fP
.RS 4
\fItime\fP durée de vie des bullets 
.RE
.PP
\fBRenvoie\fP
.RS 4
pas de valeur de retour (void) 
.RE
.PP

.SS "\fBbool\fP suppDernier (\fBLinkedList\fP * lst)"

.PP
Fonction qui permet de supprimer la queue de la liste liste passée en paramètre\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlst\fP pointeur sur la liste dans laquelle on veut inserer un élement 
.RE
.PP
\fBRenvoie\fP
.RS 4
un booleen si l'élement a bien été supprimé ou non 
.RE
.PP

.SS "void suppListe (\fBLinkedList\fP * lst)"

.PP
Fonction qui permet de supprimer la liste passée en paramètre\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlst\fP pointeur sur la liste dans laquelle on veut insérer un élement 
.RE
.PP
\fBRenvoie\fP
.RS 4
pas de valeur de retour (void) 
.RE
.PP

.SS "\fBbool\fP suppPremier (\fBLinkedList\fP * lst)"

.PP
Fonction qui permet de supprimer la tete de la liste passée en paramètre\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlst\fP pointeur sur la liste dans laquelle on veut insérer un élement 
.RE
.PP
\fBRenvoie\fP
.RS 4
un booleen si l'élement a bien été supprimé ou non 
.RE
.PP

.SS "\fBbool\fP supprimeCible (\fBLinkedList\fP * lsptr, int target)"

.PP
Fonction qui permet de supprimer un élément cible dans une liste\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlsptr\fP pointeur sur la liste dans laquelle on veut supprimer un élément 
.br
\fItarget\fP élément cible qu'on veut supprimer 
.RE
.PP
\fBRenvoie\fP
.RS 4
un booleen si l'élément cible a bien été supprimé ou non 
.RE
.PP

.SS "\fBNode\fP * trouve (\fBLinkedList\fP * lsptr, int target, \fBNode\fP ** prvPtr)"

.PP
Fonction qui permet de chercher un élement dans une liste\&. 
.PP
\fBParamètres\fP
.RS 4
\fIlsptr\fP pointeur sur la liste dans laquelle on cherche un élement 
.br
\fItarget\fP élement cible qui est cherché 
.br
\fIprvPtr\fP pointeur sur l'élément précédent 
.RE
.PP
\fBRenvoie\fP
.RS 4
Pointeur sur une structure de type \fBNode\fP 
.RE
.PP

.SH "Documentation des variables"
.PP 
.SS "\fBLinkedList\fP bullet"
Liste des bullets 
.SS "\fBLinkedList\fP items"
Liste des items 
.SS "\fBLinkedList\fP listCollider"
Liste des colliders 
.SS "\fBLinkedList\fP listEnnemis"
Liste des ennemis 
.SS "int timerBullets"
Temps d'apparition a l'ecran des bullets 
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Beauty Savior à partir du code source\&.
